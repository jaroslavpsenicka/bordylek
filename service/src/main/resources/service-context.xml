<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
    ">

    <!-- @Component, @Service, @Controller, @Repository, @Configuration -->
    <context:component-scan base-package="org.bordylek.service, org.bordylek.web" />

	<!-- Mongo -->
	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoClientFactoryBean">
		<property name="host" value="${db_host}" />
	</bean>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongo" ref="mongo" />
        <constructor-arg name="databaseName" value="${db_name}" />
    </bean>
    <bean id="mongoFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
        <constructor-arg name="mongo" ref="mongo" />
        <constructor-arg name="databaseName" value="${db_name}" />
    </bean>
    <bean id="mongoMessageStore" class="org.springframework.integration.mongodb.store.MongoDbMessageStore">
        <constructor-arg ref="mongoFactory"/>
        <constructor-arg name="collectionName" value="events"/>
    </bean>

    <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<bean class="org.springframework.data.mongodb.core.MongoExceptionTranslator" />
	
	<bean class="org.springframework.data.mongodb.core.mapping.event.ValidatingMongoEventListener">
        <constructor-arg>
	        <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	    </constructor-arg>
    </bean>
    
	<!-- Async execution config -->
	<task:annotation-driven executor="slowExecutor" />
    <task:executor id="slowExecutor" pool-size="2"/>

    <cache:annotation-driven />
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehcache"/>
    </bean>

    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:/ehcache.xml"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="port" value="25" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="username" value="" />
        <property name="password" value="" />
    </bean>

    <bean id="notificationService" class="org.bordylek.service.NotificationService">
        <property name="mailSender" ref="mailSender"/>
        <property name="configuration">
            <bean class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
                <property name="templateLoaderPath">
                    <value>classpath:/email-templates/</value>
                </property>
            </bean>
        </property>
    </bean>

</beans>